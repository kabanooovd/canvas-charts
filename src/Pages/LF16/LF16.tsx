import { useNavigate } from 'react-router-dom'
import { GraphLF16 } from './GraphLF16/GraphLF16'
import style from './LF16.module.scss'

export const LF16 = () => {
      const navi = useNavigate()

    const incomingData = {
        "diagnosisConclusion": [
          {
            "scale": "ОКО",
            "result": null,
            "addon": null,
            "interpretations": [
              "Обесценивание. Негативная оценка себя, своего прошлого и будущих перспектив, декларация безнадежности и обесценивание усилий, навешивание негативных ярлыков, блокировка деятельности из-за преувеличенно негативного прогноза. ",
              "Долженствование. Повышенная моральная ответственность, стремление к обеспечению безопасности за счет морального контроля над окружающими. Проявления: преобладание моральных суждений и оценок в восприятии явлений и людей, представляющих потенциальное неудобство или опасность. ",
              "Амбициозность. Максимализм и крайность в оценках, потребность в восхищении, выражающаяся через нарциссическую безупречность. Проявления: крайность в суждениях.",
              "Индивидуализм. Настойчивое стремление отстаивать свою самооценку, связанное со страхом ошибиться. Негибкость суждений, преобладание эгоцентрических защитных суждений и бездействия, склонность явно или скрыто оспаривать мнение и предложения других людей «из принципа», отождествляя себя с предметом спора.  ",
              "Нарциссизм. Декларация собственной исключительности, неконструктивное соперничество, не насыщаемая потребность в признании, восхищении, безупречности в глазах окружающих, безапелляционное признание собственной правоты как компенсация неуверенности и недостаточного самоуважения."
            ]
          }
        ],
        "diagnosisChart": {
          "name": "OKO",
          "datasets": {
            "Пациент": [
              {
                "name": "A",
                "value": 12
              },
              {
                "name": "B",
                "value": 4
              },
              {
                "name": "C",
                "value": 11
              },
              {
                "name": "D",
                "value": 3
              },
              {
                "name": "E",
                "value": 8
              },
              {
                "name": "F",
                "value": 2
              },
              {
                "name": "G",
                "value": 9
              },
              {
                "name": "H",
                "value": 2
              },
              {
                "name": "I",
                "value": 8
              },
              {
                "name": "J",
                "value": 3
              },
              {
                "name": "K",
                "value": 7
              },
              {
                "name": "L",
                "value": 4
              },
              {
                "name": "M",
                "value": 6
              },
              {
                "name": "O",
                "value": 5
              },
              {
                "name": "O1",
                "value": 7
              },
              {
                "name": "O2",
                "value": 4
              },
              {
                "name": "O3",
                "value": 8
              },
              {
                "name": "O4",
                "value": 3
              },
              {
                "name": "Q7",
                "value": 9
              }
            ],
            "Норма": []
          }
        }
      }

    return <div className={style.container}>
        <div className={style.headerWrapper}>
            <span>График ЛФ16</span>
            <div className={style.goBackWrapper} onClick={() => navi('/')}>
                <span>Назад</span>
            </div>
        </div>
        <div className={style.contentWrapper}>
            <GraphLF16 data={incomingData.diagnosisChart.datasets['Пациент']} />
        </div>
    </div>
}